global.__keyCache = %[];
global.__whiteList = %[];
global.__checkHeader = function (buff, head) {
  var min = buff.count < head.length ? buff.count : head.length;
  Debug.message('bufferLength = ' + min);
  for (var i = 0; i < min; i++) {
    if (buff[i] !== head[i])
      return false;
  }
  return true;
};
global.__checkPlainText = function (buff) {
  for (var i = 0, len = buff.count; i < len; i++) {
    if (buff[i] >= 0x80)
      return false;
  }
  return true;
};

Storages.setXP3ArchiveExtractionFilter(
  function (h, o, b, l, f) {
    Debug.message(h, o, b, l, f);
    if (global.__whiteList[f] === true)
      return;
    var pars = f.split('.');
    pars.reverse();
    var ext = pars[0].toLowerCase();
    switch (ext) {
    case 'tjs':
    case 'ks':
    case 'asd': {
        Debug.message('Decoding ' + f + '...');
        // TJS2 Bytecode
        if (global.__checkHeader(b, <% 54 4a 53 32 %>)) {
          global.__whiteList[f] = true;
          return;
        }
        // TJS2 TextStream - krkrz/krkrz/blob/master/base/TextStream.cpp#97
        if (global.__checkHeader(b, <% fe fe %>)) {
          global.__whiteList[f] = true;
          return;
        }
        // PlainText
        //if (global.__checkPlainText(b)) {
        //  global.__whiteList[f] = true;
        //  return;
        //}
        Debug.message('Entrypted ' + f);
        // Encrypted TJS2 TextStream
        if (global.__keyCache[f] === void) {
          global.__keyCache[f] = b[0] ^ 0xfe;
        }
      } break;
    case 'png': {
        Debug.message('Decoding ' + f + '...');
        // Normal PNG
        if (global.__checkHeader(b, <% 89 50 4e 47 %>)) {
          global.__whiteList[f] = true;
          return;
        }
        // Encrypted
        if (global.__keyCache[f] === void) {
          global.__keyCache[f] = b[0] ^ 0x89;
        }
      } break;
      case 'mpg': {
        Debug.message('Decoding ' + f + '...');
        // Normal MPG
        if (global.__checkHeader(b, <% 00 00 01 B3 %>)) {
          global.__whiteList[f] = true;
          return;
        }
        // Encrypted
        if (global.__keyCache[f] === void) {
          global.__keyCache[f] = b[0] ^ 0x00;
        }
      } break;
    case 'wmv': {
        Debug.message('Decoding ' + f + '...');
        // Normal WMV
        if (global.__checkHeader(b, <% 30 26 B2 75 8E 66 CF 11 A6 D9 00 AA 00 62 CE 6C %>)) {
          global.__whiteList[f] = true;
          return;
        }
        // Encrypted
        if (global.__keyCache[f] === void) {
          global.__keyCache[f] = b[0] ^ 0x30;
        }
      } break;
    case 'ogg': {
        Debug.message('Decoding ' + f + '...');
        // Normal OGG
        if (global.__checkHeader(b, <% 4f 67 67 73 %>)) {
          global.__whiteList[f] = true;
          return;
        }
        // Encrypted
        if (global.__keyCache[f] === void) {
          global.__keyCache[f] = b[0] ^ 0x4f;
        }
      } break;
    case 'sli': {
        Debug.message('Decoding ' + f + '...');
        // Normal SLI
        if (global.__checkHeader(b, <% 03 12 0e 10 10 2a 03 00 %>)) {
          global.__whiteList[f] = true;
          return;
        }
        // Encrypted
        if (global.__keyCache[f] === void) {
          global.__keyCache[f] = b[0] ^ 0x03;
        }
      } break;
    default:
      return;
    }
    var k = global.__keyCache[f];
    Debug.message(f + ' key: ' + k);
    b.xor(0, l, k);
    //throw new Exception();
  }
);

